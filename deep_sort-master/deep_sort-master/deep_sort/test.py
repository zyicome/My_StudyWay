import kalman_filter
import numpy as np

X = np.array([[100], [50], [1.0], [150]])
my_test_kalman = kalman_filter.KalmanFilter()
mean, covariance = my_test_kalman.initiate(X)
print("mean", mean)
print("covariance", covariance)
print("--------------1-----------")
mean, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
now_Z = np.array([[136, 100, 1.1, 130]])
print("---------------update--------------")
mean, covariance = my_test_kalman.update(mean, covariance, now_Z.T)
print("mean", mean)
print("covariance", covariance)
print("--------------2-----------")
mean, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
now_Z_2 = np.array([[182, 146, 1.15, 100]])
print("---------------update--------------")
mean, covariance = my_test_kalman.update(mean, covariance, now_Z_2.T)
print("mean", mean)
print("covariance", covariance)
print("--------------3-----------")
mean, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
now_Z_3 = np.array([[200, 180, 1.18, 70]])
print("---------------update--------------")
mean, covariance = my_test_kalman.update(mean, covariance, now_Z_3.T)
print("mean", mean)
print("covariance", covariance)
print("--------------4-----------")
meam, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
now_Z_4 = np.array([[230, 220, 1.21, 50]])
print("---------------update--------------")
mean, covariance = my_test_kalman.update(mean, covariance, now_Z_4.T)
print("mean", mean)
print("covariance", covariance)
print("--------------5-----------")
mean, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
now_Z_5 = np.array([[265, 250, 1.23, 40]])
print("---------------update--------------")
mean, covariance = my_test_kalman.update(mean, covariance, now_Z_5.T)
print("mean", mean)
print("covariance", covariance)
print("--------------5-----------")
mean, covariance = my_test_kalman.predict(mean, covariance)
print("mean", mean)
print("covariance", covariance)
